/*
## Form elements
# Inputs
```
<form autocomplete="off">
	<div class="form-input">
		<input id="input-1" type="text" required>
		<label for="input-1">Name</label>
	</div>

	<div class="form-input">
		<input id="input-2" type="text" required>
		<label for="input-2">Surname</label>
	</div>

	<div class="form-input">
		<input id="input-3" type="text" required>
		<label for="input-3">Nick</label>
	</div>

</form>
```
# Text area
```
<div>
	<div class="form-input">
		<textarea id="textarea-1" required></textarea>
		<label for="textarea-1">Description</label>
	</div>
</div>
```
*/
.form-input{
	position: relative;
	padding :  @inputHeight 0 0px;

	label{
		position   : absolute;
		left       : 10px;
		top        : @inputHeight;
		line-height: @inputHeight;
		color      : @themeColor_1;
		.transition();
	}
	input,
	textarea{
		&.filled + label,
		&:focus + label,
		&:valid + label{
			top: 0;
		}
	}
}


/*
# CheckBox - Icon
```
<div class="form-check-icon">
	<input id="CBI-1" type="checkbox" checked>
	<label for="CBI-1"></label>
</div>

<div class="form-check-icon">
	<input id="CBI-2" type="checkbox">
	<label for="CBI-2"></label>
</div>

<div class="form-check-icon">
	<input id="CBI-3" type="checkbox">
	<label for="CBI-3"></label>
</div>
```
*/
.form-check-icon{
	@size : @inputHeight;

	label:before{color: @colorState_disable}
	label:after {color: @themeColor_1}

	& when (@firstLoad = true){
		label{
			position       : relative;
			display        : block;
			width          : @size;
			height         : @size;
			cursor         : pointer;
			transform-style: preserve-3d;
			.transition(@property: transform;);
			&:after,
			&:before{
				position           : absolute;
				top                : 0;
				left               : 0;
				bottom             : 0;
				right              : 0;
				text-align         : center;
				display            : block;
				font-size          : @size;
				backface-visibility: hidden;
				.font_icons();
			}
			&:before{
				content: "\E806";
			}
			&:after{
				content  : "\E802";
				transform: translate3d(0, 0, 0) rotateY(180deg);
			}
		}
		input{
			display: none;
			&:checked + label{
				transform: translate3d(0, 0, 0) rotateY(180deg);
			}
		}
	}
}

/*
# Switch
```
<div class="form-switch">
	<input id="switch-4" type="checkbox">
	<label for="switch-4"></label>
</div>

<div class="form-switch">
	<input id="switch-5" type="checkbox" checked>
	<label for="switch-5"></label>
</div>
```

# Check (texted)
```
<div class="form-switch texted">
	<input id="switch-6" type="checkbox">
	<label for="switch-6"></label>
</div>

<div class="form-switch texted">
	<input id="switch-7" type="checkbox" checked>
	<label for="switch-7"></label>
</div>
```
*/
.form-switch{
	@height         : @inputHeight;
	@width          : @height * 2;
	@ball-height    : @height * 0.8;
	@transition-time: 0.20s;

	input[type="checkbox"]{
		display: none;

		& + label{
			position  : relative;
			display   : block;
			width     : @width;
			height    : @height;
			background: @colorState_disable;
			cursor    : pointer;
			.rounded(@height);
			.transition(@property: background-color; @time: @transition-time);
			&:after{
				position  : absolute;
				content   : '';
				left      : (@height - @ball-height) / 2;
				top       : (@height - @ball-height) / 2;
				height    : @ball-height;
				width     : @ball-height;
				background: @themeColor_1;
				.rounded(50%);
				.transition(@transition-time);
			}
		}
		&:checked + label{
			background: @themeColor_2;
			&:after{
				left: @width - @ball-height - ((@height - @ball-height) / 2);
			}
		}
	}

	&.texted input[type="checkbox"]{
		& + label{
			&:before{
				position   : absolute;
				content    : 'Off';
				right      : 12.5%;
				font-size  : @height * 0.5;
				line-height: @height;
				color      : @white;
				.transition(@transition-time);
			}
		}
		&:checked + label{
			&:before{
				content: 'On';
				right  : 55%;
			}
		}
	}
}
